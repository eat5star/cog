import nltk
import re
import string
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline
nltk.download('stopwords')
from nltk.corpus import stopwords
texts = [
    "Patient has a high fever and severe headache.",
    "Mild cough observed, no fever detected.",
    "Severe chest pain and difficulty in breathing."
]
labels = [1, 0, 1]
def preprocess_text(text):
    text = text.lower()
    text = re.sub(f"[{string.punctuation}]", "", text)
    text = " ".join([word for word in text.split() if word not in stopwords.words('english')])
    return text
processed_texts = [preprocess_text(t) for t in texts]
model = make_pipeline(TfidfVectorizer(), MultinomialNB())
model.fit(processed_texts, labels)
new_text = ["Patient reports severe breathing issues and fever."]
processed_new_text = [preprocess_text(t) for t in new_text]
prediction = model.predict(processed_new_text)
severity = "Severe" if prediction[0] == 1 else "Mild"
print("Predicted severity:", severity)
if prediction[0] == 1:
    print("Reason: Presence of critical symptoms like 'severe', 'breathing issues', and 'fever'.")
else:
    print("Reason: Symptoms are mild, and no critical termsÂ detected.")
